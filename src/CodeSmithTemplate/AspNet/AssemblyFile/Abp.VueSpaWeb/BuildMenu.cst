<%@ Template Language="C#" TargetLanguage="C#" Src="../../../CommonCode.cs" Inherits="CodeSmithTemplate.CommonCode" Encoding="utf-8" %>
<%@ Register Template="../Helper/AssemblyFileProperty.cst" Name="AssemblyFileProperty" MergeProperties="True" %>  
<%@ Register Template="../Helper/GenerateConfigProperty.cst" Name="GenerateConfigProperty" MergeProperties="True" %> 
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Linq" %>
<%@ Assembly Src="../../../ClassNames.cs" %>
<%@ Assembly Src="../blqw.CSComment/CSComment.cs" %>
<%@ Import Namespace="blqw.Reflection" %>
<%@ Assembly Src="../AssemblyFileHelper.cs" %>
<%@ Import Namespace="CodeSmithTemplate" %>
<%@ Import Namespace="CodeSmithTemplate.AspNet.AssemblyFile" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%
ClassNames N = AssemblyFileHelper.Init(this);
%>


//放到 Web目录  \App_Start\Navigation 目录，PageNames.cs 

public const string <%=EntityName %> = "<%=ModuleName %>.<%=EntityName %>";


//放到 Core目录 \Authorization 目录  ScmAuthorizationProvider.cs （如果存在则不用添加，只需要第一次添加）
BuilderUtils.Build(context, "<%=ModuleName %>");

//放到 Core目录  \Authorization\Builders\Permissions 目录  xxx.json

{
"name": "<%=EntityName %>Management",
"displayName": "<%=N.EntitySummary %>",
"defaultPermission": true
}
        
        
        
//放到 Web目录  \App_Start\Navigation 目录，SpaNavigationProvider.cs 

.AddItem(new MenuItemDefinition(
        PageNames.App.<%=ModuleName %>.<%=EntityName %>,
        new FixedLocalizableString("<%=N.EntitySummary %>"),
        url: "/<%=VueSpaWebPagePath %>/<%=N.VueWebPageName %>",
        icon: "icon-nutrients-management",
        requiredPermissionName: <%=N.AppServicePermissionPrefix %>
    )
)



//放到前端  routers.js

{

	path: '/<%=VueSpaWebPagePath %>/<%=N.VueWebPageName %>',
	name: "<%=N.VueWebPageName %>",
	meta: {
		title: "<%=N.EntitySummary %>"
	},
	component: resolve => require(['../views/<%=VueSpaWebPagePath %>/<%=N.VueWebPageName %>.vue'], function (component) {
		resolve(modules.createQueryVueModule(component));
	})
}, 