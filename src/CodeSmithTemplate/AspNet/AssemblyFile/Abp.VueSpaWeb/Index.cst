<%@ Template Language="C#" TargetLanguage="HTML" Src="../../../CommonCode.cs" Inherits="CodeSmithTemplate.CommonCode" Encoding="utf-8" %>
<%@ Register Template="../Helper/AssemblyFileProperty.cst" Name="AssemblyFileProperty" MergeProperties="True" %>  
<%@ Property Name="VueSpaWebBaseAppService" Type="System.Boolean" Category="03.生成配置" Description="如果true,则需要先生成AppService，再生成web" Default="true"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Linq" %>
<%@ Assembly Src="../../../ClassNames.cs" %>
<%@ Assembly Src="../blqw.CSComment/CSComment.cs" %>
<%@ Import Namespace="blqw.Reflection" %>
<%@ Assembly Src="../AssemblyFileHelper.cs" %>
<%@ Import Namespace="CodeSmithTemplate" %>
<%@ Import Namespace="CodeSmithTemplate.AspNet.AssemblyFile" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%
var names = GetAssemblyFileNames(DllFolder, ProjectName, EntityName, PermissionModuleName);
var assType = GetAssemblyType(names.CoreDllFile, EntityName);
var entityColumns = GetProperties(assType);

Dictionary<string, string> queryDtoColunms = null;
Dictionary<string, string> getAllInputColunms = null;
Dictionary<string, string> createOrUpdateInputColunms = null;

if(VueSpaWebBaseAppService)
{
    queryDtoColunms = AssemblyFileHelper.GetPropertiesSummary(names.ApplicationDllFile,names.QueryDtoName);
    getAllInputColunms = AssemblyFileHelper.GetPropertiesSummary(names.ApplicationDllFile,names.GetAllInputName);
    createOrUpdateInputColunms = AssemblyFileHelper.GetPropertiesSummary(names.ApplicationDllFile, names.DtoName);
} 
else 
{    
    queryDtoColunms = AssemblyFileHelper.GetPropertiesSummary(DtoColumns(entityColumns));
    getAllInputColunms = AssemblyFileHelper.GetPropertiesSummary(GetAllInputColumns(entityColumns));
    createOrUpdateInputColunms = AssemblyFileHelper.GetPropertiesSummary(DtoColumns(entityColumns));
}

var excelControllerName = "Wms/" + EntityName;
var jsAppService = ToFirstLetterCamel(names.AppServiceName).Replace("AppService","");
%>
<template>
    <div class="content">
        <el-form class="search-box" label-width="60px">
            <el-row :gutter="10">
                <el-col :span="4" :xs="24" class="pull-right">
                    <el-form-item label-width="0px">
                        <el-button size="small" type="primary" icon="search" @click="queryList">查询</el-button>
                        <el-button size="small" icon="more" @click="searchShowMore = !searchShowMore">{{searchShowMore?'隐藏':'更多'}}</el-button>
                    </el-form-item>
                </el-col>
                <%foreach(var col in getAllInputColunms){ %>
                <%if(IsIn(col.Key.ToLower(), "maxresultcount","skipcount","sorting","filter")){continue;} %>
				<el-col :span="5" :xs="24">
                    <el-form-item label="<%=col.Value %>">
                        <q-input v-model="filters.<%=col.Key %>" placeholder="<%=col.Value %>"></q-input>
                    </el-form-item>
                </el-col>
                <%} %>
            </el-row>
        </el-form>
        <el-row class="division-border">
            <el-button @click="createOrUpdateDialog.isShow = true" type="primary" v-permission:<%=names.VueWebPermissionPrefix %>-Create>新增</el-button>
			<el-button @click="preEdit(appService.get)" v-permission:<%=names.VueWebPermissionPrefix %>-Edit>编辑</el-button>
			<el-button @click="preBatchDelete(appService.delete)" type="danger" v-permission:<%=names.VueWebPermissionPrefix %>-Delete>删除</el-button>
            <el-button @click="exportExcel">导出库存</el-button>
			<el-button @click="downloadImporTemplate">下载模板</el-button>
			<el-upload id="uploadExcel" style="margin-left:10px;display:inline" :headers="uploadFileSetting.headers" :action="uploadAction" :before-upload="beforeUploadFile" :on-success="onUploadFileSuccess" :on-error="onUploadFileError" :show-file-list="false" accept=".xlsx">
				<el-button type="primary" v-loading.fullscreen.lock="uploadFileSetting.loading" element-loading-text="导入中，请耐心等待！">导入修改</el-button>
			</el-upload>
        </el-row>
        <el-row class="division-border">
            <el-radio-group style="margin-bottom: 10px;" v-model="radioGroupFilters" @change="queryList">
				<el-radio :label="-999">所有</el-radio>
			</el-radio-group>
            <div class="table-wrap-box">
                <el-table stripe ref="listTable" :data="tableData" border style="width: 100%" @row-click="handleRowClick" @select-all="handleSelectAll"
                    :row-class-name="rowClassName">
                    <el-table-column align="center" type="selection" width="50"></el-table-column>
                    <%foreach(var col in queryDtoColunms) {%>
                    <%if(IsIn(col.Key.ToLower(),"id")){continue;} %>
                    <%if(IsIn(col.Key.ToLower(), "creationtime","lastmodificationtime")){ %>
                    <el-table-column header-align="center" label="<%=col.Value %>" prop="<%=col.Key %>">
                        <template scope="scope">
                            <span>{{scope.row.<%=col.Key %> | dateFormat('yyyy-MM-dd hh:mm:ss')}}</span>
                        </template>
                    </el-table-column>
                    <% continue;} %>
                    <%if(IsIn(col.Key.ToLower(), "creatoruserid","lastmodifieruserid")){ %>
                    <el-table-column header-align="center" label="<%=col.Value %>" prop="<%=col.Key %>">
                        <template scope="scope">
                            <user-name :userId="scope.row.<%=col.Key %>"></user-name>
                        </template>
                    </el-table-column>
                    <% continue;} %>
                    <el-table-column header-align="center" label="<%=col.Value %>" prop="<%=col.Key %>"></el-table-column>
                    <%} %>
                </el-table>
            </div>
            <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="pagination.currentPage"
                :page-sizes="pagination.pagesizes" :page-size="pagination.pageSize" layout="total, sizes, prev, pager, next, jumper"
                :total="pagination.total">
            </el-pagination>
        </el-row>
        <el-dialog title="新增/编辑" :visible.sync="createOrUpdateDialog.isShow" :show-close="true" @close="closeDialog(createOrUpdateDialog)">
            <div class="form-wrap-box">
                <el-form label-position="left" :model="createOrUpdateDialog.model" ref="createOrUpdateForm" label-width="100px">
                    <%foreach(var col in createOrUpdateInputColunms) {%>
                    <%if(IsIn(col.Key.ToLower(),"id")){continue;} %>
                    <el-form-item prop="<%=col.Key %>" label="<%=col.Value %>" :rules="{ required: true, message: '请输入<%=col.Value %>', trigger: 'blur' }">
                        <el-input v-model="createOrUpdateDialog.model.<%=col.Key %>"></el-input>
                    </el-form-item>
                    <%} %>
                </el-form>
                <span slot="footer" style="float:right;">
                    <el-button @click="closeDialog(createOrUpdateDialog)">取 消</el-button>
                    <el-button type="primary" @click="saveDialogForm(createOrUpdateDialog)">保 存</el-button>
                </span>
            </div>
        </el-dialog>
    </div>
</template>
<script>
let resetCreateForm = {		
    <%foreach(var col in createOrUpdateInputColunms){ %>
    <%=col.Key %>:"",
    <%} %>
};	
let appService = site.api.services.app.<%=jsAppService %>;
export default {
	data() {
		return {
			filters: {
                <%foreach(var col in getAllInputColunms){ %>
                <%if(IsIn(col.Key.ToLower(), "maxresultcount","sorting","skipcount","filter")){continue;} %>
                <%=col.Key %> : "",
                <%} %>
        	},
            
            appService: appService,
			queryListHandler: appService.getAll,
            
			createOrUpdateDialog: {
				saveHandle: appService.createOrUpdate,
				initModel: resetCreateForm,
				model: resetCreateForm
			},
            
			uploadAction: site.Config.webapiDomain + '<%=excelControllerName %>/ImportExcel'
		};
	},
    methods: {
		//导入导出  
		downloadImporTemplate() {
			site.utils.downloadFileIframe('<%=excelControllerName %>/DownloadImporTemplate');
		},
		exportExcel() {
			site.utils.downloadFileIframe('<%=excelControllerName %>/ExportExcel?' + site.utils.json2get(this.filters));
		}
        
    }
}
</script>