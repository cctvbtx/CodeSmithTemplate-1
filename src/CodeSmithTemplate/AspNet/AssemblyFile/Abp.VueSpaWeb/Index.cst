<%@ Template Language="C#" TargetLanguage="HTML" Src="../../../CommonCode.cs" Inherits="CodeSmithTemplate.CommonCode" Encoding="utf-8" %>
<%@ Register Template="../Helper/AssemblyFileProperty.cst" Name="AssemblyFileProperty" MergeProperties="True" %>  
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Linq" %>
<%@ Assembly Src="../../../ClassNames.cs" %>
<%@ Assembly Src="../blqw.CSComment/CSComment.cs" %>
<%@ Import Namespace="blqw.Reflection" %>
<%@ Assembly Src="../AssemblyFileHelper.cs" %>
<%@ Import Namespace="CodeSmithTemplate" %>
<%@ Import Namespace="CodeSmithTemplate.AspNet.AssemblyFile" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%
var names = GetAssemblyFileNames(DllFolder, ProjectName, EntityName, PermissionModuleName);
var queryDtoColunms = AssemblyFileHelper.GetPropertiesSummary(names.ApplicationDllFile,names.QueryDtoName);
var getAllInputColunms = AssemblyFileHelper.GetPropertiesSummary(names.ApplicationDllFile,names.GetAllInputName);
var createOrUpdateInputColunms = AssemblyFileHelper.GetPropertiesSummary(names.ApplicationDllFile, names.DtoName);
var excelControllerName = "Wms/" + EntityName;
%>
<template>
    <div class="content">
        <el-form class="search-box" label-width="60px">
            <el-row :gutter="10">
                <el-col :span="4" :xs="24" class="pull-right">
                    <el-form-item label-width="0px">
                        <el-button size="small" type="primary" icon="search" @click="queryList">查询</el-button>
                    </el-form-item>
                </el-col>
                <%foreach(var col in getAllInputColunms){ %>
                <%if(IsIn(col.Key.ToLower(), "maxresultcount","skipcount","sorting","filter")){continue;} %>
				<el-col :span="5" :xs="24">
                    <el-form-item label="<%=col.Value %>">
                        <el-input size="small" v-model="searchInfo.<%=col.Key %>" @keyup.native.enter="filters.<%=col.Key %> = searchInfo.<%=col.Key %>" @change.native="filters.<%=col.Key %> = searchInfo.<%=col.Key %>" placeholder="<%=col.Value %>"></el-input>
                    </el-form-item>
                </el-col>
                <%} %>
            </el-row>
        </el-form>
        <el-row class="division-border">
            <el-button @click="createOrUpdateModelDialog = true" type="primary" v-permission:<%=names.PermissionPrefix %>-Create>新增</el-button>
        </el-row>
        <el-row class="division-border">
            <div class="table-wrap-box">
                <el-table stripe ref="listTable" :data="tableData" border style="width: 100%" @row-click="handleRowClick" @select-all="handleSelectAll"
                    :row-class-name="rowClassName">
                    <el-table-column align="center" type="selection" width="50"></el-table-column>
                    <el-table-column align="center" width="100" label="操作">
                        <template scope="scope">
                            <el-button type="text" @click.stop.prevent="editFormBtnHandler(scope.row.id)" v-permission:<%=names.PermissionPrefix %>-Edit>修改</el-button>
                        </template>
                    </el-table-column>
                    <%foreach(var col in queryDtoColunms) {%>
                    <%if(IsIn(col.Key.ToLower(),"id")){continue;} %>
                    <%if(IsIn(col.Key.ToLower(), "creationtime","lastmodificationtime")){ %>
                    <el-table-column header-align="center" label="<%=col.Value %>" prop="<%=col.Key %>">
                        <template scope="scope">
                            <span>{{scope.row.<%=col.Key %> | dateFormat('yyyy-MM-dd hh:mm:ss')}}</span>
                        </template>
                    </el-table-column>
                    <% continue;} %>
                    <%if(IsIn(col.Key.ToLower(), "creatoruserid","lastmodifieruserid")){ %>
                    <el-table-column header-align="center" label="<%=col.Value %>" prop="<%=col.Key %>">
                        <template scope="scope">
                            <user-name :userId="scope.row.<%=col.Key %>"></user-name>
                        </template>
                    </el-table-column>
                    <% continue;} %>
                    <el-table-column header-align="center" label="<%=col.Value %>" prop="<%=col.Key %>"></el-table-column>
                    <%} %>
                </el-table>
            </div>
            <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="pagination.currentPage"
                :page-sizes="[10, 25, 50,100]" :page-size="pagination.pageSize" layout="total, sizes, prev, pager, next, jumper"
                :total="pagination.total">
            </el-pagination>
        </el-row>
        <el-dialog title="新增/编辑" :visible.sync="createOrUpdateModelDialog" :show-close="true" @close="createOrUpdateModelDialogCloseCallback">
            <div class="form-wrap-box">
                <el-form label-position="left" :model="createOrUpdateModel" ref="createOrUpdateFormForm" label-width="100px">
                    <%foreach(var col in createOrUpdateInputColunms) {%>
                    <%if(IsIn(col.Key.ToLower(),"id")){continue;} %>
                    <el-form-item prop="<%=col.Key %>" label="<%=col.Value %>" :rules="{ required: true, message: '请输入<%=col.Value %>', trigger: 'blur' }">
                        <el-input v-model="createOrUpdateModel.<%=col.Key %>"></el-input>
                    </el-form-item>
                    <%} %>
                </el-form>
                <span slot="footer" style="float:right;">
                    <el-button @click="createOrUpdateModelDialogCloseCallback">取 消</el-button>
                    <el-button type="primary" @click="createOrUpdateFormSaveBtnHandler">保 存</el-button>
                </span>
            </div>
        </el-dialog>
    </div>
</template>
<script>
	let resetCreateForm = {		
        <%foreach(var col in createOrUpdateInputColunms){ %>
        <%=col.Key %>:"",
        <%} %>
	};
	let initFilters = {
        <%foreach(var col in getAllInputColunms){ %>
        <%if(IsIn(col.Key.ToLower(), "maxresultcount","skipcount","sorting","filter")){continue;} %>
        <%=col.Key %>:"",
        <%} %>
	};
	let appService = site.api.services.app.<%=ToFirstLetterCamel(names.AppServiceName) %>;
    export default {
		data() {
			return {
				filters: initFilters,
				searchInfo: initFilters,
				createOrUpdateModelDialog: false,
				createOrUpdateModel: resetCreateForm,
				uploadAction: site.Config.webapiDomain + '<%=excelControllerName %>/ImportExcel'
			};
		},
        methods: {
			init() {
				this.queryList();
			},
			queryList() {
				this.getAll(appService);
			},
            
            
			//新增弹框关闭事件
			createOrUpdateModelDialogCloseCallback() {
				this.fromModelDialogCloseCallback(() => {
					this.createOrUpdateModel = resetCreateForm;
					this.createOrUpdateModelDialog = false;
				});
			},
			//新增或者修改保存事件
			createOrUpdateFormSaveBtnHandler() {
				this.formSaveBtnHandler(appService, this.createOrUpdateModel, result => {
					this.createOrUpdateModel = resetCreateForm;
					this.createOrUpdateModelDialog = false;
				});
			},
            editFormBtnHandler(id) {
                if (id <= 0) {
                    this.$toastr.warning('无法获取Id');
                }
                this.createOrUpdateModelDialog = true;
                appService.get({ id: id }).then((result) => {
                    this.createOrUpdateModel = result;
                });
            },
            
			//导入  
			downloadImporTemplate() {
				site.utils.downloadFileIframe('<%=excelControllerName %>/DownloadImporTemplate');
			},
			beforeUploadExcel(file) {
				this.uploadFileSetting.loading = true;
			},
			onUploadExcelSuccess(response, file, fileList) {
				this.onUploadFileSuccess(appService, response);
			},
			onUploadExcelError(err, file, fileList) {
				this.onUploadFileError(err);
			},
            
            //导出
			exportExcel() {
				site.utils.downloadFileIframe('<%=excelControllerName %>/ExportExcel?' + site.utils.json2get(this.filters));
			}
            
        }
    }
</script>