<%@ Template Language="C#" TargetLanguage="C#" Src="../../../CommonCode.cs" Inherits="CodeSmithTemplate.CommonCode" Encoding="utf-8" %>
<%@ Register Template="../Helper/AssemblyFileProperty.cst" Name="AssemblyFileProperty" MergeProperties="True" %>  
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Linq" %>
<%@ Assembly Src="../../../ClassNames.cs" %>
<%@ Assembly Src="../blqw.CSComment/CSComment.cs" %>
<%@ Import Namespace="blqw.Reflection" %>
<%@ Assembly Src="../AssemblyFileHelper.cs" %>
<%@ Import Namespace="CodeSmithTemplate" %>
<%@ Import Namespace="CodeSmithTemplate.AspNet.AssemblyFile" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%
var names = GetAssemblyFileNames(DllFolder, ProjectName, EntityName, PermissionModuleName);
var assType = GetAssemblyType(names.CoreDllFile, EntityName);
var entityColumns = GetProperties(assType);
var getAllInputColumns = GetAllInputColumns(entityColumns);
var pktype = GetPropertyType(assType, names.PkName);
var pkDeaultValueString = GetPropertyDefaultValueString(assType, names.PkName);
%>
using System;
using System.Linq;
using System.Threading.Tasks;
using Abp.Authorization;
using Abp.Domain.Repositories;
using Abp.Extensions;
using Abp.Linq.Extensions;
using <%=ProjectName %>.Authorization;
using <%=ProjectName %>.Extensions;
using <%=assType.Namespace %>.Dto;

namespace <%=assType.Namespace %>
{
    /// <summary>
    /// <%=AssemblyFileHelper.GetClassSummary(assType) %>  服务实现
    /// </summary>
    public partial class <%=names.BaseAppServiceName %> : AsyncCrudAppServiceBase<<%=EntityName %>, <%=names.QueryDtoName %>, <%=pktype %>, <%=names.GetAllInputName %>, <%=names.CreateInputName %>, <%=names.UpdateInputName %>>
    {
        /// <summary>
        /// 构造函数
        /// </summary>
        /// <param name="<%=ToFirstLetterCamel(EntityName) %>repository"></param>
        public <%=names.BaseAppServiceName %>(IRepository<<%=EntityName %>, <%=pktype %>> <%=ToFirstLetterCamel(EntityName) %>repository) : base(<%=ToFirstLetterCamel(EntityName) %>repository)
        {
        }
    }
}