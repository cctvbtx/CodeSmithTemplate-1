<%@ Template Language="C#" TargetLanguage="C#" Src="../../../CommonCode.cs" Inherits="CodeSmithTemplate.CommonCode" Encoding="utf-8" %>
<%@ Register Template="../Helper/AssemblyFileProperty.cst" Name="AssemblyFileProperty" MergeProperties="True" %>  
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Linq" %>
<%@ Assembly Src="../../../ClassNames.cs" %>
<%@ Assembly Src="../blqw.CSComment/CSComment.cs" %>
<%@ Import Namespace="blqw.Reflection" %>
<%@ Assembly Src="../AssemblyFileHelper.cs" %>
<%@ Import Namespace="CodeSmithTemplate" %>
<%@ Import Namespace="CodeSmithTemplate.AspNet.AssemblyFile" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%
var names = GetAssemblyFileNames(DllFolder, ProjectName, EntityName, ModuleName);
var assType = AssemblyFileHelper.GetAssemblyType(names.CoreDllFile, EntityName);
var entityColumns = AssemblyFileHelper.GetProperties(assType);
var getAllInputColumns = AssemblyFileHelper.GetAllInputColumns(entityColumns);
var pktype = AssemblyFileHelper.GetPropertyType(assType, names.PkName);
var pkDeaultValueString = AssemblyFileHelper.GetPropertyDefaultValueString(assType, names.PkName);

var entityDateTimeProps = AssemblyFileHelper.GetDateTimeProperties(getAllInputColumns);

%>
using System;
using System.Linq;
using System.Threading.Tasks;
using Abp.Authorization;
using Abp.Domain.Repositories;
using Abp.Extensions;
using Abp.Linq.Extensions;
using <%=ProjectName %>.Authorization;
using <%=ProjectName %>.Extensions;
using <%=assType.Namespace %>.Dto;

namespace <%=ProjectName %>.Web.Areas.<%=ModuleName %>.Controllers
{
    /// <summary>
    /// <%=AssemblyFileHelper.GetClassSummary(assType) %>  控制器
    /// </summary>
    public class <%=names.WebControllerName %> : ScmControllerBase
    {
        private readonly I<%=names.MgmtAppServiceName %> _<%=ToFirstLetterCamel(names.MgmtAppServiceName) %>;
        /// <summary>
        /// 构造函数
        /// </summary>
        public <%=names.WebControllerName %>(I<%=names.MgmtAppServiceName %> <%=ToFirstLetterCamel(names.MgmtAppServiceName) %>)
        {
            _<%=ToFirstLetterCamel(names.MgmtAppServiceName) %> = <%=ToFirstLetterCamel(names.MgmtAppServiceName) %>;
        }
        
        [DisableAuditing]
        public async Task<FileResult> ExportExcel(<%=names.GetAllInputName %> input)
        {
            var list = await _<%=ToFirstLetterCamel(names.MgmtAppServiceName) %>.GetAll(input);
            var stream = list.Items.ToExcel("货主库存", new[] { "仓库编码", "货主编码", "商品编码", "可用数量" }
            , a => a.WarehouseCode
            , a => a.CargoOwnerCode
            , a => a.GoodsCode
            , a => a.AvailableQty
                );
            using (stream)
            {
                return File(stream.ToArray(), "application/vnd.ms-excel", $"货主库存{DateTime.Now:yyyy-MM-dd HH-mm-ss}.xlsx;
            }
        }
    }
}